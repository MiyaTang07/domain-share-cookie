#!/usr/bin/env node
/**
 * step 1:询问是否将文件输出到当前目录（y/n）
 * step 2:将chrome extension输出到对应文件夹地址
*/
const { Command } = require('commander')
const { resolve } = require('path')
const chalk = require('chalk')
const program = new Command()
const fse = require('fs-extra')

program
   .usage('[options]')
   .option('-w, --where <string>', 'url address where the extension placed')

program.parse(process.argv)

const json = fse.readJsonSync(resolve(__dirname, '../domain.json'))
   
const { from, to } = json
if (!from) {
   console.log(`${chalk.red('\nDomain which offer cookie has not been setted\n')}`)
   console.log(`${chalk.green('use [domain set -F XXX] to add info\n')}`)
   process.exit(1)
}
if (!to) {
   console.log(`${chalk.red('\nDomain which consume cookie has not been setted\n')}`)
   console.log(`${chalk.green('use [domain set -F XXX] to add info\n')}`)
   process.exit(1)
}
 
const options = program.opts()
if (options) {
   const { where } = options

   if (where) {
      fse.pathExists(resolve(where)).then(exist => {
         if (!exist) {
           console.log(`${chalk.red('\n🌲Directory does not exist, try\n')}`)
           console.log(`${chalk.green('domain init')}`)
           console.log(`${chalk.red('\nwithout options which download extension into current directory.🌲\n')}`)
           process.exit(1)
         }
         copyExtensionInfoLocalDir(where)
       })
   } else {
      copyExtensionInfoLocalDir(path.join(process.cwd(), 'cookie-share'))
   }
}

function copyExtensionInfoLocalDir(url) {
   try {
      const file = resolve(__dirname, '../cookie-share/domain.json')
      fse.outputFileSync(file, `${JSON.stringify(json)}`)
      fse.copySync(resolve(__dirname, '../cookie-share'), url)
      console.log(`${chalk.green('\nDownload successfully,all you need to do is import the cookie-share extension into\n')}`)
      console.log(`${chalk.green('chrome://extensions/\n' + '\n🎈Good luck🎈\n')}`)
    } catch (err) {
      console.error(`${chalk.red('🌲Download failed.🌲')}`)
    }
}

